#!/usr/bin/perl

use strict;
use warnings;
use File::Basename;
use Getopt::Long qw(:config no_ignore_case bundling);
use File::Slurp;
use YAML qw(LoadFile DumpFile Dump);

use FindBin qw($Bin);
use lib "$Bin/lib";
use Shrtn::Utils qw(shortcode_available get_shortcode);

my $CONFIG_FILE = "$Bin/data/config.yml";
my $DB_FILE     = "$Bin/data/db.yml";

sub usage {
  warn @_ if @_;
  die "usage: " . basename($0) . " <url> [<shortcode>]\n";
}

$|++;

my $verbose = 0;
my ($help, $noop);
usage unless GetOptions(
  'help|h|?'        => \$help,
  'verbose|v+'      => \$verbose,
);
usage if $help;
usage unless @ARGV;

my $url  = shift @ARGV;
my $code = shift @ARGV;
# Sanity checks
die "URL doesn't start with http? $url\n" if $url !~ m!^https?://!;

# Setup
my $config = LoadFile($CONFIG_FILE);
my $db_file = $config->{db} || $DB_FILE;
my $db = -f $db_file ? LoadFile($db_file) : {};
my $base_url = $config->{base_url}
  or die "No base_url setting found in config.yml\n";

if ($code) {
  # Check if $code is available in $db, dying if not
  shortcode_available($code, $db, $url, { base_url => $base_url, die => 1 });
}
else {
  # Generate new shortcode for $url
  $code = get_shortcode($db, $url);
}

# Add code to db and save to disk
$db->{$code} = $url;
DumpFile("$db_file.tmp", $db)
  and rename("$db_file.tmp", $db_file)
    or die "Saving database failed: $!";

# Generate new redirect page in htdocs
my $template = read_file("$Bin/data/template.html");
$template =~ s/<% URL %>/$url/gs;
my $outfile = "$Bin/htdocs/$code.html";
open my $fh, '>', $outfile
  or die "Cannot open '$outfile' for output: $!";
print $fh $template
  or die "Cannot write to $outfile: $!";
close $fh;

# Report
print "OK: $base_url/$code\n";

